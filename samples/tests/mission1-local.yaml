drone:
  port: ros #{sitl, ros, cf}
  params_file: samples/flights/auto-params.csv #csv file with the same structure as above
  mission_file: samples/flights/scenario4-5_10m.plan #5m trajectory altitude

simulation:
  simulator: ros #{gazebo, jmavsim, ros}
  speed: 1
  headless: true
  wind: 5
  light: 0.95
  obstacles:
    - size:
        l: 6
        w: 6
        h: 10
      position:
        x: 20
        y: 50
        z: 0
        angle: 10
      shape: BOX
      pattern_design: default
    - size:
        l: 6
        w: 6
        h: 10
      position:
        x: -6
        y: 10
        z: 0
        angle: 0
      shape: BOX
      pattern_design: default
    - size:
        l: 6
        w: 6
        h: 15
      position:
        x: 14
        y: 38
        z: 0
        angle: 0
      shape: BOX
    - size:
        l: 3
        w: 3
        h: 20
      position:
        x: 5
        y: 5
        z: 0
        angle: 5
      shape: BOX
    - size:
        l: 0
        w: 0
        h: 0
      position:
        x: 10
        y: 0
        z: 0
        angle: 0
      shape: TREE
    - size:
        l: 0
        w: 0
        h: 0
      position:
        x: 15
        y: -2
        z: 0
        angle: 0
      shape: TREE
    - size:
        l: 0
        w: 0
        h: 0
      position:
        x: 13
        y: 5
        z: 0
        angle: 0
      shape: TREE
#    - size:
#        l: 0
#        w: 0
#        h: 0
#      position:
#        x: -20
#        y: 50
#        z: 0
#        angle: 0
#      shape: APARTMENT
    - size:
        l: 0
        w: 0
        h: 0
      position:
        x: 23
        y: 15
        z: 0
        angle: 90
      shape: APARTMENT
#  pattern_design:
#    - chequered
#    - chequered
  world_file_name: ["simple_obstacle_scenario1"]

test:
  commands_file: samples/flights/auto_commands.csv
  speed: 1

assertion:
  log_file: samples/flights/first_test.ulg
  variable: trajectory

#agent:
#  engine: local # {k8s, docker, local}
#  count: 1

